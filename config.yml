receivers:
  prometheus:
    config:
      global:
        scrape_interval: 30s
        scrape_timeout: 10s
      scrape_configs:
      - job_name: "adot-sidecar-scrape-application"
        static_configs:
        - targets: [ "127.0.0.1:$APPLICATION_PORT" ]
        honor_labels: true
        honor_timestamps: true

processors:
  resourcedetection/env:
    detectors: [env]
    timeout: 2s
    override: true

  resourcedetection/ecs:
    detectors: [ecs]
    timeout: 2s
    override: true

  resource/deleteUnrequired:
    attributes:
      - key: net.host.name
        action: delete
      - key: net.host.port
        action: delete
      - key: service.instance.id
        action: delete
      - key: service.name
        action: delete
      - key: http.scheme
        action: delete
      - key: cloud.provider
        action: delete
      - key: cloud.platform
        action: delete
      - key: cloud.account.id
        action: delete
      - key: cloud.region
        action: delete
      - key: cloud.availability_zone
        action: delete
      - key: aws.ecs.cluster.arn
        action: delete
      - key: aws.ecs.task.family
        action: delete
      - key: aws.ecs.task.revision
        action: delete
      - key: aws.ecs.launchtype
        action: delete
      - key: aws.log.group.names
        action: delete
      - key: aws.log.group.arns
        action: delete
      - key: aws.log.stream.names
        action: delete
      - key: aws.log.stream.arns
        action: delete

  resource/rename:
    attributes:
      - key: ecsTaskARN
        from_attribute: aws.ecs.task.arn
        action: insert
      - key: aws.ecs.task.arn
        action: delete

exporters:
  prometheusremotewrite:
    endpoint: $PROMETHEUS_ENDPOINT_URL
    resource_to_telemetry_conversion:
        enabled: true
    auth:
      authenticator: sigv4auth
  logging:
    verbosity: normal

extensions:
  sigv4auth:
    region: $AWS_REGION
    service: aps
    assume_role:
      arn: $PROMETHEUS_WRITE_ASSUME_ROLE_ARN

service:
  telemetry:
    logs:
      level: $OTEL_LOG_LEVEL
    metrics:
      level: none
  extensions: [sigv4auth]
  pipelines:
    metrics/application:
      receivers:
        - prometheus
      processors:
        - resourcedetection/env
        - resourcedetection/ecs
        - resource/deleteUnrequired
        - resource/rename
      exporters:
        - logging
        - prometheusremotewrite
