receivers:
  prometheus:
    config:
      global:
        scrape_interval: 15s
        scrape_timeout: 10s
      scrape_configs:
      - job_name: "adot-sidecar-scrape-application"
        # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
        static_configs:
          - targets: [ "test-app:${APPLICATION_PORT}" ]
        honor_labels: true
        honor_timestamps: true

processors:
  resourcedetection/env:
    detectors: [env]
    timeout: 2s
    override: true

  resourcedetection/ecs:
    detectors: [ecs]
    timeout: 2s
    override: true

  resource/deleteUnrequired:
    attributes:
      - key: net.host.name
        action: delete
      - key: net.host.port
        action: delete
      - key: service.instance.id
        action: delete
      - key: service.name
        action: delete
      - key: http.scheme
        action: delete

  resource/rename:
    attributes:
      - key: barLabel
        from_attribute: fooLabel
        action: insert
      - key: fooLabel
        action: delete

exporters:
  prometheusremotewrite:
    endpoint: ${PROMETHEUS_REMOTE_WRITE_URL}
    # We do not want to cause a mass discontinuity in all out existing metrics, so disable the new behaviour
    # which adds suffixes with the metrics type.
    add_metric_suffixes: false
    resource_to_telemetry_conversion:
        enabled: true
  logging:
    verbosity: normal

service:
  telemetry:
    logs:
      level: ${OTEL_LOG_LEVEL}
    metrics:
      level: none
  pipelines:
    metrics/application:
      receivers:
        - prometheus
      processors:
        - resourcedetection/env
        - resourcedetection/ecs
        - resource/deleteUnrequired
        - resource/rename
      exporters:
        - logging
        - prometheusremotewrite
